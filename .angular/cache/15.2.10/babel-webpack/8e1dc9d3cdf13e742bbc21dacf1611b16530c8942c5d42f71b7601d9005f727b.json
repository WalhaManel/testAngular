{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nfunction AddStudentComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddStudentComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddStudentComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtext(1, \" gender is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddStudentComponent {\n  constructor(acr) {\n    this.acr = acr;\n    this.id = 0;\n  }\n  ngOnInit() {\n    this.id = this.acr.snapshot.params['id'];\n    this.studentForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      email: new FormControl('', [Validators.required]),\n      gender: new FormControl(this.id, Validators.required)\n    });\n  }\n  get name() {\n    return this.studentForm.get('name');\n  }\n  get email() {\n    return this.studentForm.get('email');\n  }\n  get gender() {\n    return this.studentForm.get('gender');\n  }\n  add() {\n    console.log(\"my form\" + JSON.stringify(this.studentForm.value));\n  }\n  static #_ = this.ɵfac = function AddStudentComponent_Factory(t) {\n    return new (t || AddStudentComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddStudentComponent,\n    selectors: [[\"app-add-student\"]],\n    decls: 25,\n    vars: 4,\n    consts: [[1, \"container\"], [3, \"formGroup\"], [1, \"input-group\"], [1, \"input-group-prepend\"], [1, \"input-group-text\"], [\"type\", \"text\", \"aria-label\", \"Name\", \"id\", \"Name\", \"name\", \"Name\", \"formControlName\", \"Name\", 1, \"form-control\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"type\", \"text\", \"aria-label\", \"email\", \"id\", \"email\", \"name\", \"email\", \"formControlName\", \"email\", 1, \"form-control\"], [\"type\", \"text\", \"aria-label\", \"gender\", \"id\", \"gender\", \"name\", \"gender\", \"formControlName\", \"gender\", 1, \"form-control\"], [\"type\", \"submit\", 3, \"click\"], [1, \"alert\", \"alert-danger\"]],\n    template: function AddStudentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"add-student works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"form\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"span\", 4);\n        i0.ɵɵtext(7, \"Name\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(8, \"input\", 5);\n        i0.ɵɵtemplate(9, AddStudentComponent_div_9_Template, 2, 0, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"br\");\n        i0.ɵɵelementStart(11, \"div\", 2)(12, \"div\", 3)(13, \"span\", 4);\n        i0.ɵɵtext(14, \"email\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(15, \"textarea\", 7);\n        i0.ɵɵtemplate(16, AddStudentComponent_div_16_Template, 2, 0, \"div\", 6);\n        i0.ɵɵelementStart(17, \"div\", 2)(18, \"div\", 3)(19, \"span\", 4);\n        i0.ɵɵtext(20, \"gender\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(21, \"input\", 8);\n        i0.ɵɵtemplate(22, AddStudentComponent_div_22_Template, 2, 0, \"div\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(23, \"br\");\n        i0.ɵɵelementStart(24, \"input\", 9);\n        i0.ɵɵlistener(\"click\", function AddStudentComponent_Template_input_click_24_listener() {\n          return ctx.add();\n        });\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.studentForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.Name.touched && ctx.Name.invalid);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.email.touched && ctx.email.invalid);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.gender.touched && ctx.gender.invalid);\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;;;;;ICQxDC,+BAAuE;IACtEA,kCACD;IAAAA,iBAAM;;;;;IAQVA,+BAA0E;IACzEA,mCAED;IAAAA,iBAAM;;;;;IAOLA,+BAA4E;IACxEA,oCAED;IAAAA,iBAAM;;;ADvBjB,OAAM,MAAOC,mBAAmB;EAG9BC,YAAoBC,GAAoB;IAApB,QAAG,GAAHA,GAAG;IADrB,OAAE,GAAC,CAAC;EAGN;EAEAC,QAAQA;IACN,IAAI,CAACC,EAAE,GAAC,IAAI,CAACF,GAAG,CAACG,QAAQ,CAACC,MAAM,CAAC,IAAI,CAAC;IACtC,IAAI,CAACC,WAAW,GAAC,IAAIV,SAAS,CAAC;MAC7BW,IAAI,EAAC,IAAIZ,WAAW,CAAC,EAAE,EAACE,UAAU,CAACW,QAAQ,CAAC;MAC5CC,KAAK,EAAC,IAAId,WAAW,CAAC,EAAE,EAAC,CAACE,UAAU,CAACW,QAAQ,CAAC,CAAC;MAC/CE,MAAM,EAAC,IAAIf,WAAW,CAAC,IAAI,CAACQ,EAAE,EAACN,UAAU,CAACW,QAAQ;KACnD,CAAC;EACJ;EACA,IAAID,IAAIA;IAAG,OAAO,IAAI,CAACD,WAAW,CAACK,GAAG,CAAC,MAAM,CAAC;EAAA;EAC9C,IAAIF,KAAKA;IAAG,OAAO,IAAI,CAACH,WAAW,CAACK,GAAG,CAAC,OAAO,CAAC;EAAA;EAChD,IAAID,MAAMA;IAAG,OAAO,IAAI,CAACJ,WAAW,CAACK,GAAG,CAAC,QAAQ,CAAC;EAAA;EAClDC,GAAGA;IACDC,OAAO,CAACC,GAAG,CAAC,SAAS,GAACC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACV,WAAW,CAACW,KAAK,CAAC,CAAC;EAC/D;EAAC;qBApBUlB,mBAAmB;EAAA;EAAA;UAAnBA,mBAAmB;IAAAmB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCThCxB,yBAAG;QAAAA,kCAAkB;QAAAA,iBAAI;QACzBA,8BAAuB;QAKsBA,oBAAI;QAAAA,iBAAO;QAE5CA,2BAAuG;QACxGA,oEAEM;QACPA,iBAAM;QACZA,sBAAI;QACJA,+BAAyB;QAEcA,sBAAK;QAAAA,iBAAO;QAE7CA,+BAA0H;QAC7HA,sEAGM;QAENA,+BAAyB;QAESA,uBAAM;QAAAA,iBAAO;QAE9CA,4BAA+G;QAC/GA,sEAGS;QACXA,iBAAM;QAIFA,sBAAI;QACJA,iCAAqC;QAAhBA;UAAA,OAASyB,SAAK;QAAA,EAAC;QAApCzB,iBAAqC;;;QApCrCA,eAAyB;QAAzBA,2CAAyB;QAOlBA,eAAoC;QAApCA,2DAAoC;QAUvCA,eAAsC;QAAtCA,6DAAsC;QAUrCA,eAAwC;QAAxCA,+DAAwC","names":["FormControl","FormGroup","Validators","i0","AddStudentComponent","constructor","acr","ngOnInit","id","snapshot","params","studentForm","name","required","email","gender","get","add","console","log","JSON","stringify","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\21652\\Desktop\\Angular\\testProject\\src\\app\\add-student\\add-student.component.ts","C:\\Users\\21652\\Desktop\\Angular\\testProject\\src\\app\\add-student\\add-student.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.css']\n})\nexport class AddStudentComponent implements OnInit {\n  studentForm!:FormGroup\n    id=0\n  constructor(private acr : ActivatedRoute){\n\n  }\n\n  ngOnInit(): void {\n    this.id=this.acr.snapshot.params['id']\n    this.studentForm=new FormGroup({\n      name:new FormControl('',Validators.required),\n      email:new FormControl('',[Validators.required]),\n      gender:new FormControl(this.id,Validators.required),\n    })\n  }\n  get name(){return this.studentForm.get('name')}\n  get email(){return this.studentForm.get('email')}\n  get gender(){return this.studentForm.get('gender')}\n  add(){\n    console.log(\"my form\"+JSON.stringify(this.studentForm.value))\n  }\n\n}\n","<p>add-student works!</p>\n<div class=\"container\">\n    <form [formGroup]=\"studentForm\">\n    \n        <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n              <span class=\"input-group-text\">Name</span>\n            </div>\n            <input type=\"text\" aria-label=\"Name\" id=\"Name\" name=\"Name\" formControlName=\"Name\" class=\"form-control\">\n           <div *ngIf=\"Name!.touched && Name!.invalid\" class=\"alert alert-danger\">\n            Name is required\n           </div>\n          </div>\n    <br>\n    <div class=\"input-group\">\n          <div class=\"input-group-prepend\">\n            <span class=\"input-group-text\">email</span>\n          </div>\n          <textarea type=\"text\" aria-label=\"email\" id=\"email\" name=\"email\" formControlName=\"email\"  class=\"form-control\"></textarea>\n       <div  *ngIf=\"email!.touched && email!.invalid\" class=\"alert alert-danger\">\n        email is required\n    \n       </div>\n    \n       <div class=\"input-group\">\n        <div class=\"input-group-prepend\">\n          <span class=\"input-group-text\">gender</span>\n        </div>\n        <input type=\"text\" aria-label=\"gender\" id=\"gender\" name=\"gender\" formControlName=\"gender\" class=\"form-control\">\n        <div  *ngIf=\"gender!.touched && gender!.invalid\" class=\"alert alert-danger\">\n            gender is required\n        \n           </div>\n      </div>\n    \n    \n        </div>\n          <br>\n          <input type=\"submit\" (click)=\"add()\">\n    \n    </form>\n    \n    </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}